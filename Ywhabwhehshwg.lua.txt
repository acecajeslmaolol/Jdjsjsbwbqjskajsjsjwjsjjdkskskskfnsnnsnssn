local VirtualInputManager = game:GetService("VirtualInputManager")
local UserInputService = game:GetService("UserInputService")
local currentKey = Enum.KeyCode.C

-- Save last position
getgenv().KeyClickerPosition = getgenv().KeyClickerPosition or nil

-- GUI Setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "KeyClickerMiniUI"
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 150, 0, 170)
frame.Position = getgenv().KeyClickerPosition or UDim2.new(0.5, -75, 0.5, -85)
frame.BackgroundColor3 = Color3.fromRGB(28, 28, 35)
frame.BorderSizePixel = 0
frame.Active = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

-- Button Creator
local function createButton(parent, positionY, text, color, callback)
	local btn = Instance.new("TextButton", parent)
	btn.Size = UDim2.new(1, -20, 0, 32)
	btn.Position = UDim2.new(0, 10, 0, positionY)
	btn.Text = text
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 16
	btn.AutoButtonColor = true
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
	btn.MouseButton1Click:Connect(callback)
	return btn
end

-- Press Key C/B
local keyBtn = createButton(frame, 10, "Press: C", Color3.fromRGB(0, 120, 255), function()
	VirtualInputManager:SendKeyEvent(true, currentKey, false, game)
	task.wait(0.05)
	VirtualInputManager:SendKeyEvent(false, currentKey, false, game)
end)

-- Press V Key
local vBtn = createButton(frame, 50, "Press: V", Color3.fromRGB(255, 120, 60), function()
	VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.V, false, game)
	task.wait(0.05)
	VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.V, false, game)
end)

-- Toggle Key
local toggleBtn
toggleBtn = createButton(frame, 90, "Switch to B", Color3.fromRGB(45, 45, 55), function()
	if currentKey == Enum.KeyCode.C then
		currentKey = Enum.KeyCode.B
		keyBtn.Text = "Press: B"
		toggleBtn.Text = "Switch to C"
	else
		currentKey = Enum.KeyCode.C
		keyBtn.Text = "Press: C"
		toggleBtn.Text = "Switch to B"
	end
end)

-- Minimize
local minimizeBtn = createButton(frame, 130, "-", Color3.fromRGB(60, 60, 60), function()
	frame.Visible = false
	local restoreBtn = Instance.new("TextButton", gui)
	restoreBtn.Size = UDim2.new(0, 50, 0, 50)
	restoreBtn.Position = frame.Position
	restoreBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	restoreBtn.Text = "+"
	restoreBtn.Font = Enum.Font.Gotham
	restoreBtn.TextColor3 = Color3.new(1, 1, 1)
	restoreBtn.TextSize = 20
	restoreBtn.Name = "RestoreButton"
	restoreBtn.Active = true
	Instance.new("UICorner", restoreBtn).CornerRadius = UDim.new(1, 0)

	restoreBtn.MouseButton1Click:Connect(function()
		frame.Visible = true
		restoreBtn:Destroy()
	end)

	-- Drag restore button
	local draggingRestore, dragStartRestore, startPosRestore
	restoreBtn.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			draggingRestore = true
			dragStartRestore = input.Position
			startPosRestore = restoreBtn.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then draggingRestore = false end
			end)
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if draggingRestore and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStartRestore
			restoreBtn.Position = UDim2.new(startPosRestore.X.Scale, startPosRestore.X.Offset + delta.X,
			                                startPosRestore.Y.Scale, startPosRestore.Y.Offset + delta.Y)
		end
	end)
end)

-- Drag main frame
local dragging, dragStart, startPos
frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
		                           startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		getgenv().KeyClickerPosition = frame.Position
	end
end)

-- Touch Support
if UserInputService.TouchEnabled then
	keyBtn.TouchTap:Connect(function() keyBtn:Activate() end)
	vBtn.TouchTap:Connect(function() vBtn:Activate() end)
	toggleBtn.TouchTap:Connect(function() toggleBtn:Activate() end)
	minimizeBtn.TouchTap:Connect(function() minimizeBtn:Activate() end)
end
